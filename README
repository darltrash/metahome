m e t a h o m e

an experimental game about experimentation in games, a journey into my mind.

this game is still nothing but a tech demo right now, but the engine currently supports:
  - tile-based maps encoded with MSGPACK (and a LDTK to MSGPACK map conversor)
  - tile-based rendering of tiles in a tileset
  - tileset loading and overall (limited) filesystem abilities
  - basic font rendering (thanks sokol)

things i need to add:
  - collision handler (and grid based movement!)
  - audio thingies
  - tracker music format support
  - entity handler
  - dialog handler
  - KOOL SHADURZ (VERY COOL)
  - packing every single asset onto the binary itself (hard)

things i may add:
  - GLES2 support (and thus, also native wayland support)
  - gamepad support
  - a level editor made in GTK4 (ooor imgui, that is also a posibility)


HOW TO RUN:
  you will need: 
    - the xorg development libraries 
    - preferabily a gl3+ compatible gpu
    - zig master 0.8.0
    - a little bit of patience
  
  - first clone this repo
  - build the maps with "buildmaps.sh"
  - build the debug binary with "zig build run"
  - uhh, profit, i guess!
  
  If it shows up some weird error message like "hEY FAiLeD to INitIalizE Gl cOntEXt XD"
  then, you may need to try this out in a newer GPU or use ./run.sh and sacrifice performance.
  
  note: I have no idea of the outcome of this program or anything related to it and i am not responsible for that.
  i havent tested it on macOS nor Windows, so if you do, please leave me an issue or something :)


HOW TO EXPORT (DOESNT WORKS AS INTENDED, WIP):
  you will need:
    - everything else in the HOW TO RUN section

  - first clone this repo
  - build the maps with "buildmaps.sh"
  - build the release binary with "pack.sh"
  - now you should have a binary named "metahome" :)

  if it shows up the same stupid error, run metahome this way:
  LIBGL_ALWAYS_SOFTWARE=1 ./metahome

  again, consider running this on a newer gpu because this method will slow down
  things by a lot because it forces software rendering (which is normally slower than hardware rendering)
  

DEVELOPMENT PHILOSOPHY:
  i have been struggling with ADHD for a long while and i wanted to follow a programming philosophy 
  i call "first trashcode, then refine", which means that this code is utter garbage and it's like 
  that in purpose, so before anyone points something like "HEY U HAEV A CODEIGN PORBELM" out,
  consider that this is nothing but a DEMO of what's coming up next (which will also be open source).

  in resume: this code is garbage and i will fix it later, deal with it.

  
LICENSE:
  Copyright (c) Nelson "darltrash" Lopez 2021
  Check LICENSE and ASSETSLICENSE.
